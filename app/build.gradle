plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // 可以在 Kotlin 項目中使用諸如 Dagger 或 Data Binding 之類的庫。
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.marsrealestate"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    // enable dataBinding
    buildFeatures {
        //noinspection DataBindingWithoutKapt
        dataBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // 應用程序需要與服務器建立網絡連接，將使用名為Retrofit的 REST 客戶端庫 來建立此連接。
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    // 針對 Retrofit 標量轉換器。此轉換器使 Retrofit 能夠將 JSON 結果作為String. 這兩個庫協同工作。
    // implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // Moshi 它是一個 Android JSON 解析器，可將 JSON 字符串轉換為 Kotlin 對象。
    // Retrofit 有一個可與 Moshi 配合使用的轉換器。
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // Glide 緩衝、解碼和緩存您的圖像。
    // 1.要加載和顯示的圖像的 URL。 2.ImageView實際顯示該圖像的對象。
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
}